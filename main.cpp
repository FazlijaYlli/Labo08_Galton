/*
-----------------------------------------------------------------------------------
Nom du fichier    : main.cpp
Nom du labo       : Labo08_Galton Groupe L
Auteur(s)         : Jeremiah Steiner, Ylli Fazlija
Date creation     : 11.01.2022
Description (But) : le but du programme et non le but du labo !!
Remarque(s)       : BUG ? Entrée fausse non traité par exemple
Compilateur       : Mingw-w64 g++ 8.1.0
-----------------------------------------------------------------------------------
*/

#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <limits>
#include <random>
#include "Galton.h"
#include "Utilities.h"
#include "Dictionnaire.h"

#define VIDER_BUFFER() std::cin.ignore(std::numeric_limits<streamsize>::max(), '\n')

using namespace std;

int main() {
	/*
	std::random_device rd;  //Will be used to obtain a seed for the random number engine
	std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
	std::uniform_int_distribution<> distrib(0, 1);

	int t[101] = {};
	int tmp;

	for(int i=0; i < 15030; ++i) {
		tmp = 0;
		for (int n = 0; n < 100; ++n) {
			//Use `distrib` to transform the random unsigned int generated by gen into an int in [1, 6]
			tmp += distrib(gen);
		}
		cout << endl;
		t[tmp] += 1;
	}

	cout << endl;

	for(int i : t) {
		cout << i << ' ';
	}*/

	// number engine
	//std::random_device rd;  //Will be used to obtain a seed for the random
	//std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()

	// message d'accueil
	Afficher(MESSAGE_DEMARRAGE, true);

	bool recommencer;
	int nbrDeBille;
	int hauteur;

	do {
		// get les input utilisateur
		nbrDeBille = LireUnNombre(BORNE_MIN,BORNE_MAX_BILLE,
										  MESSAGE_PROMPT_BILLES, MESSAGE_ERREUR_NOMBRE,
										  true);

		hauteur = LireUnNombre(BORNE_MIN, BORNE_MAX_HAUTEUR,
									     MESSAGE_PROMPT_HAUTEUR, MESSAGE_ERREUR_NOMBRE,
									  	  true);

		// création de l'objet + affichage
		Galton g(nbrDeBille, hauteur);
		g.AfficherTableauEnLigne();
		cout << endl;
		g.AfficherTableauGraphique();


		//  lire l'entrée utilisateur pour oui ou non
		recommencer = LireChar(MESSAGE_RECOMMENCER) == 'y';

	} while (recommencer);


	Galton g(1000, 100);
	g.AfficherTableauEnLigne();
	cout << endl;
	//g.AfficherTableauGraphique();

	cout << endl;

	Galton g2(10, 5);
	g2.AfficherTableauEnLigne();
	cout << endl;
	//g2.AfficherTableauGraphique();

	Galton g3(10, 5);
	g3.AfficherTableauEnLigne();
	cout << endl;
	//g3.AfficherTableauGraphique();

	Afficher(MESSAGE_FIN, false);
	VIDER_BUFFER();

   return EXIT_SUCCESS;
}

